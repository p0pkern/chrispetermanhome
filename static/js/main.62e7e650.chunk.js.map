{"version":3,"sources":["components/Logo/Logo.js","components/Shapes/Circle.js","components/Shapes/Shapes.js","components/Home/HomeContainer.js","components/Projects/ProjectCard.js","imgs/homepagegif.gif","imgs/mybabies.gif","imgs/megahive.gif","imgs/mazeHunter.gif","imgs/battleimagesgif.gif","components/Projects/ProjectsList.js","components/Navbar/Navbar.js","components/Footer/Footer.js","App.js","index.js"],"names":["Logo","className","Circle","shapeNumber","shapeColorList","size","Math","floor","random","styleRandom","left","width","height","animationDelay","animationDuration","borderRadius","backgroundColor","length","mixedBlendMode","style","Shapes","shapeList","i","push","map","circle","HomeContainer","color","ProjectCard","props","useState","expand","setExpand","expandCard","number","onClick","title","github","target","rel","href","demo","src","image","alt","description","lang1","lang2","lang3","ProjectsList","battleImages","mazeHunter","homepage","mybabies","megahive","Navbar","console","log","to","Footer","Home","Projects","App","cursorX","useMotionValue","cursorY","springConfig","damping","stiffness","cursorXSpring","useSpring","cursorYSpring","useEffect","moveCursor","e","set","clientX","clientY","window","addEventListener","removeEventListener","motion","div","translateX","translateY","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62e7e650.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Logo.css\"\n\n/**\n * The center text of the homepage.\n */\nconst Logo = () => {\n    return (\n        <div className=\"logo\">\n            <h1 className=\"title\">Portfolio Website</h1>\n            <p  className=\"author\">By Chris Peterman</p>\n        </div>\n    )\n}\n\nexport default Logo\n","import React from \"react\"\n\n/**\n    This will produce a stylized shape for use in the react homepage. The shape will start below\n    the page and slowly drift upward at a random speed and random size. \n\n    @param {The key of the current shape}\n    @returns {A list JSX with with the @param as the key and the style}\n\n    Currently only a circle is implemented. I have left room to expand to more shapes as I upgrade\n    the website if I want. However, I like the look of the rising circles at the moment.\n\n */\nconst Circle = ({shapeNumber}) => {\n    /**\n        Creates a random style component used to assign to the list item that will be the shape.\n        The colors are designated on the below theme. \n     */\n    const shapeColorList = [\"#0000FF\", \"#FF0000\", \"#FFFF00\", \"FF6600\", \"#00FF00\", \"#6600FF\", \"#000000\", \"#FFFFFF\"] \n    const size = Math.floor(Math.random() * 100 + 10)\n    const styleRandom = {\n        left : `${Math.floor(Math.random() * 200)}%`,\n        width : size,\n        height : size,\n        animationDelay: `${Math.floor(Math.random() * 3)}s`,\n        animationDuration: `${Math.floor(Math.random() * 60 + 10)}s`,\n        borderRadius: `50%`,\n        backgroundColor: `${shapeColorList[Math.floor(Math.random() * shapeColorList.length)]}`,\n        mixedBlendMode: 'difference'\n    }\n\n    return (\n        <li key={shapeNumber} style={styleRandom}></li>\n    )\n}\n\nexport default Circle\n","import React from \"react\"\nimport Circle from \"./Circle\"\nimport \"./Shapes.css\"\n\n/**\n *  Calls the circle JSX a predetermined amount of times and adds them to a list for\n *  processing.\n */\nconst Shapes = () => {\n\n    let totalShapes = 50\n\n    let shapeList = []\n    for (let i=0; i < totalShapes; i++) {\n        shapeList.push(<Circle shapeNumber={i}/>)\n    }\n\n    return (\n        <ul className=\"shapes\">\n            {shapeList.map(circle => circle)}\n        </ul>\n    )\n}\n\nexport default Shapes\n","import React from \"react\"\nimport Logo from \"../Logo/Logo\"\nimport Shapes from \"../Shapes/Shapes\"\nimport \"./Home.css\"\n\n/**\n * Container object taht produces the homepage. Shapes generates the floating shapes in the background.\n * Header provides the top header portion of the page. Footer contains the bottom bar of color.\n */\n\nconst HomeContainer = ({ color }) => {\n\n    return (\n        <div className=\"container\">\n            <Shapes />\n            <Logo  />\n        </div>\n    )\n}\n\nexport default HomeContainer\n","import React, {useState} from \"react\"\nimport { AiFillGithub, AiOutlineLink, AiOutlineVerticalAlignMiddle, AiOutlineVerticalAlignBottom } from \"react-icons/ai\"\nimport {Link} from \"react-router-dom\"\n\nconst ProjectCard = (props) => {\n    /* \n     * Provides all the formatting to generate an individual card for a project item.\n     * Each item will have a number which associates their placement and coloration.\n     * A title displayed in the upper left hand corner.\n     * An image on the left hand side which is a Gif of the project.\n     * A description of the project.\n     * A list of the languages used for the project.\n     * A link to the Github and Demo of the project if they exist.\n    */\n    \n    const [expand, setExpand] = useState(false) \n    \n    const expandCard = () => {\n        setExpand(!expand)\n    }   \n\n    return (\n      <div>\n      {expand ? \n       <div className=\"proj-container\" style={{backgroundColor: props.number % 2 !== 0 ? \"#FFFFFF\": \"#F8F0E3\"}}>\n        <li>\n            <div className=\"top-portion\">\n                <h3 className=\"expand-title\" onClick={expandCard}>{props.title}</h3>\n                <div className=\"icons-container\">\n                    <div className=\"icons\">\n                        {props.github ?<a target=\"_blank\" rel=\"noreferrer\" href={props.github}><AiFillGithub /></a> : \"\"}\n                        {props.demo ? <a target=\"_blank\" rel=\"noreferrer\" href={props.demo}><AiOutlineLink /></a> : \"\"}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"image-desc\">\n                <img className=\"project-img\" src={props.image} alt={props.alt}></img>\n                <div className=\"project-desc\">\n                    <h4>About</h4>\n                    <p>{props.description}</p>\n                </div>\n                <div className=\"languages-used\">\n                    <div className=\"languages-used-title\">\n                        <h4>Languages Used</h4>\n                    </div>\n                        {props.lang1 ? <p>{props.lang1}</p> : \"\"}\n                        {props.lang2 ? <p>{props.lang2}</p> : \"\"}\n                        {props.lang3 ? <p>{props.lang3}</p> : \"\"}\n                </div>\n           </div>\n           \n        </li>\n        </div> :\n        <div className=\"closed-card\"  onClick={expandCard} style={{backgroundColor: props.number % 2 !== 0 ? \"#FFFFFF\": \"#F8F0E3\"}}>\n           <h3 className=\"closed-card-title\"  onClick={expandCard}>{props.title}</h3>\n      </div>}\n     </div>\n    )\n}\n\nexport default ProjectCard\n","export default __webpack_public_path__ + \"static/media/homepagegif.f49beb8a.gif\";","export default __webpack_public_path__ + \"static/media/mybabies.a2fbb9b8.gif\";","export default __webpack_public_path__ + \"static/media/megahive.9ba1c918.gif\";","export default __webpack_public_path__ + \"static/media/mazeHunter.674a94dd.gif\";","export default __webpack_public_path__ + \"static/media/battleimagesgif.956c52c2.gif\";","import React from \"react\"\nimport ProjectCard from \"./ProjectCard\"\nimport homepage from \"../../imgs/homepagegif.gif\"\nimport mybabies from \"../../imgs/mybabies.gif\"\nimport megahive from \"../../imgs/megahive.gif\"\nimport mazeHunter from \"../../imgs/mazeHunter.gif\"\nimport battleImages from \"../../imgs/battleimagesgif.gif\"\nimport \"./Projects.css\"\n\nconst ProjectsList = ({color}) => {\n    /**\n     * Imports and creates all the necessary information to generate a project card.\n     * Returns an organized list of project cards for display on the projects page.\n     */\n    return (\n        <ul>\n            <ProjectCard number= \"1\"\n                         title=\"Battle Images\"\n                         alt=\"A gif of an image voting website\"\n                         description=\"This was a project for a software engineering class. It's a full stack voting platform application for random images. In the center is a voting pool. Votes can be added or subtrated to the images and empty or add to the voting pool. Once the voting pool is empty the image with the most points is updated at the top of the page with its winning votes and the image itself. Only the champion image is ever saved and all other images are permanently removed. Current votes and images are stored in a MySQL database, and new images are pulled from a fellow students image harvesting API.\"\n                         lang1=\"Node.js\"\n                         lang2=\"MySQL\"\n                         lang3=\"JavaScript\"\n                         color={color}\n                         github=\"https://github.com/p0pkern/battleImages\"\n                         image={battleImages}/>                         \n            <ProjectCard number=\"2\"\n                         title=\"Maze Hunter\"\n                         alt=\"A Gif of a maze being solved\"\n                         description=\"A maze solving program. The user chooses a start and end point on the grid with the option of adding 'barriers'. After hitting the search algorithm button the Maze Hunter will show every spot it checked and the end point. I wanted to get more familiar with the process of creating a GUI, Tests, and then linking the front and back end with Python. Since I'm TAing a data structures class I wanted to show a visualization of Breadth First Seach and Depth First Search. \n                                      I also wanted to create a program that could be expanded upon and scalable. With the possibilty of adding more features and search algorithms.\"\n                         lang1=\"Python\"\n                         lang2=\"tkinter\"\n                         color={color}\n                         github=\"https://github.com/p0pkern/mazeHunter\"\n                         image={mazeHunter}/> \n            <ProjectCard number=\"3\"\n                         title=\"Personal Website\" \n                         image={homepage} \n                         alt=\"Home screen of my portfolio website\"\n                         description=\"This is my homepage portfolio website. It is a single page multi-route app that links to a home page, about me section, and a projects page.\"\n                         lang1=\"React.js\"\n                         lang2=\"JavaScript\"\n                         lang3=\"HTML/CSS\"\n                         color={color}\n                         github=\"https://github.com/p0pkern/chrispetermanhome\"\n                         demo=\"/\"/>\n            <ProjectCard number=\"4\"\n                         title=\"My Babies\" \n                         image={mybabies} \n                         alt=\"A gif of My Babies web game\"\n                         description=\"This is a small game created for the Oregon State University summer hackathon. The premise of the game is you are a mother beaver trying to keep your scrambling children from wandering into the pools of fire.\"\n                         lang2=\"HTML/CSS\"\n                         lang3=\"JavaScript\"\n                         color={color}\n                         github=\"https://github.com/p0pkern/myBabies\"\n                         demo=\"https://p0pkern.github.io/myBabies/\"/>\n            <ProjectCard number=\"5\"\n                         title=\"Mega Hive\" \n                         image={megahive}\n                         alt=\"A gif of the endgame of MegaHive\"\n                         description=\"An idle clicker genre game. I wanted to experiment with the math and timing involved with an idle clicker and get some experience with React. You progress through harvesting and eventually fighting bigger bugs for meat. Once you reach a certain point you can sacrifice your units to gain boosts on the next run.\"\n                         lang1=\"React.js\"\n                         lang2=\"HTML/CSS\"\n                         lang3=\"JavaScript\"\n                         color={color}\n                         github=\"https://github.com/p0pkern/Mega-Hive\"\n                         demo=\"https://p0pkern.github.io/Mega-Hive/\"/>\n            \n        </ul>\n    )\n}\n\nexport default ProjectsList\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Navbar.css\"\n\n/**\n * The top navigation bar that appears on every page. Uses React Router to async\n * navigate to every page in the app.\n */\nconst Navbar = () => {\n    return (\n        <ul className=\"navlist\">\n            <li><Link   onClick={() => console.log(\"hello\")}\n                        className=\"nav-button\"\n                        alt=\"Go to home page\"\n                        to=\"/chrispetermanhome\">Home</Link></li>\n            <li><Link   onClick={() => console.log(\"hello 2\")}\n                        className=\"nav-button\"\n                        alt=\"A page of three projects\"\n                        to=\"/chrispetermanhome/projects\">Projects</Link></li>\n        </ul>\n    )\n}\n\nexport default Navbar\n","import React from \"react\"\nimport './Footer.css'\n\n/**\n * The bottom bar of color.\n */\nconst Footer = ({ color }) => {\n    return (\n        <div className=\"footer-style\"></div>\n    )\n}\n\nexport default Footer\n","// Standard imports\nimport React, { useEffect } from 'react'\nimport { motion, useMotionValue, useSpring } from 'framer-motion'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\n// App page style\nimport \"./styles/app.css\"\n\n// Home Page Route Components\nimport HomeContainer from \"./components/Home/HomeContainer\"\n\n// Projects Page Route Components\nimport ProjectsList from \"./components/Projects/ProjectsList\"\n\n// Navigation.\nimport Navbar from \"./components/Navbar/Navbar\"\n\n// Footer\nimport Footer from \"./components/Footer/Footer\"\n\nfunction App() {\n\n  const color = \"#626D71\"\n    \n  // Cursor animation\n  const cursorX = useMotionValue(-100)\n  const cursorY = useMotionValue(-100)\n  \n  const springConfig = {damping: 30, stiffness: 1000};\n  const cursorXSpring = useSpring(cursorX, springConfig);\n  const cursorYSpring = useSpring(cursorY, springConfig);\n\n  useEffect(() => {\n    const moveCursor = (e) => {\n      cursorX.set(e.clientX - 9)\n      cursorY.set(e.clientY - 9)\n    }\n    window.addEventListener('mousemove', moveCursor)\n    return () => {\n      window.removeEventListener('mousemove', moveCursor)\n    }\n  }, [cursorX, cursorY])\n\n   return (\n    <Router>\n      <div>\n          <motion.div className=\"cursor\" style={{translateX: cursorXSpring, translateY: cursorYSpring,\n                                      backgroundColor: \"white\"}}/>\n        <Switch>\n          <Route path=\"/chrispetermanhome/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/chrispetermanhome\">\n            <Home />\n          </Route>\n        </Switch>\n        </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n       <Navbar />\n       <HomeContainer/>\n       <Footer />\n    </div>\n)\n}\n\n\nfunction Projects() {\n  return (\n     <div>\n        <Navbar />\n        <ProjectsList />\n     </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}